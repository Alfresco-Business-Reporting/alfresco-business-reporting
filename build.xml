<?xml version="1.0" encoding="UTF-8"?>
<project name="incentro default build file" default="deploy-jar-explorer" basedir=".">
	<!-- logical defaults: deploy-explorer, deploy-share, deploy-repository--> 
	<property file="build.properties" />

	<property name="project.dir" value="." />
	<property name="build.dir" value="${project.dir}/build" />
	<property name="source.dir" value="${project.dir}/src" />
	<property name="bin.dir" value="${project.dir}/dist" />
	<property name="alfresco.project.name" value="${project.name}-explorer" />
	<property name="alfresco.package.file.jar" value="${bin.dir}/${alfresco.project.name}-${version.id}.jar" />
	<property name="alfresco.package.file.zip" value="${bin.dir}/${alfresco.project.name}-${version.id}.zip" />
	<property name="alfresco.package.file.amp" value="${bin.dir}/${alfresco.project.name}-${version.id}.amp" />
	
	<property name="share.project.name" value="${project.name}-share" />
	<property name="share.package.file.jar" value="${bin.dir}/${share.project.name}-${version.id}.jar" />
    <property name="share.package.file.zip" value="${bin.dir}/${share.project.name}-${version.id}.zip" />
	<property name="repository.project.name" value="${project.name}-repository" />
	<property name="repository.package.file.zip" value="${bin.dir}/${repository.project.name}-${version.id}.zip" />
    <property name="project.file.zip" value="${bin.dir}/${project.name}-project-${version.id}.zip" />
	<property name="module.dir" value="/module" />
	<property name="share.theme.file.jar" value="${bin.dir}/${project.name}-theme.jar" />

	<property name="config.dir" value="${project.dir}/config" />
	<property name="data.dir" value="${project.dir}/data" />
	<property name="alfresco.web.dir" value="${project.dir}/web/explorer" />
	<property name="share.web.dir" value="${project.dir}/web/share" />
	<property name="extension.dir" value="/extension" />
	
	<property name="package.file.images" value="${bin.dir}/${project.name}-images-${version.id}.zip" />
	<property name="package.lib.file.zip" value="${bin.dir}/${project.lib.name}-${version.id}.zip" />
	<property name="package.reporting.file.zip" value="${bin.dir}/${project.reporting.name}-${version.id}.zip" />
	<property name="reporting.dir" value="${project.dir}/AlfrescoBusinessReporting" />
	
	<property name="test-reports.dir" value="${project.dir}/testreports" />

	<target name="clean" description="Removes all generated files">
		<delete dir="${build.dir}" />
		<!-- delete dir="${bin.dir}" / -->
	</target>

	<target name="clean-tomcat-explorer" description="Removes deployed web-extension directory">
		<delete dir="${alfresco.web.dir}/WEB-INF/classes/alfresco/extension" />
	</target>

	<target name="setup" description="Creates the ${build.dir} and ${bin.dir} directories">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${bin.dir}" />	
	</target>
	
    <path id="yuicompressor.classpath">
        <fileset dir="lib">
            <include name="yuicompressor-2.4.2.jar"/>
            <include name="yui-compressor-ant-task-0.5.jar"/>
        </fileset>
    </path>
   
    <taskdef name="yuicompress" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
        <classpath>
            <path refid="yuicompressor.classpath" />
        </classpath>
    </taskdef>
	
	<target name="package-extension-explorer" depends="clean, setup, compile" description="Creates a zip called ${alfresco.package.file.zip} which can be unzipped on top of an exploded Alfresco web app">
		<delete file="${alfresco.package.file.zip}" />

		<zip destfile="${alfresco.package.file.zip}" update="true">
			<zipfileset dir="${config.dir}/extension" prefix="shared/classes/alfresco" excludes="web-extension*, alfresco-global.properties, module*" />
			<zipfileset dir="${alfresco.web.dir}" prefix="webapps/alfresco"  /> <!-- excludes="webapps/alfresco/META-INF/**" -->
			<zipfileset file="${alfresco.package.file.jar}" prefix="webapps/alfresco/WEB-INF/lib" />
			<!-- zipfileset dir="${project.dir}/lib" prefix="webapps/alfresco/WEB-INF/lib" excludes="**/yuicompressor-2.4.2.jar,**/yui-compressor-ant-task-0.5.jar, **/commons-net-1.4.1.jar"/ -->
		</zip>
	</target>

	<target name="jar-extension-explorer" depends="clean, setup, compile" description="Creates a jar called ${alfresco.package.file.zip} which is the customization for the Alfresco web app">
			<delete file="${alfresco.package.file.jar}" />
<!--
			<copy todir="${build.dir}/alfresco/extension">
				<fileset dir="${config.dir}/extension" excludes="**/web-client-config-custom.xml" />
			</>
			<copy todir="${build.dir}/META-INF" file="${config.dir}/extension/web-client-config-custom.xml" />
			-->
		<!--
			<copy todir="${build.dir}/META-INF" file="${config.dir}/extension/faces-config-custom.xml" />
			-->
			<jar destfile="${alfresco.package.file.jar}" update="true">
				
				<fileset dir="${build.dir}" excludes="**/extension/faces-config-custom.xml" />
				<metainf dir="${config.dir}/extension" includes="faces-config.xml" />
			</jar>
			
	</target>
	
	<target name="package-extension-share" depends="setup" description="Creates a zip called ${share.package.file.zip} which can be unzipped on top of an exploded Share web app">
		<delete file="${share.package.file.zip}" />
        <!-- Minify JS -->
        <yuicompress fromdir="${share.web.dir}" todir="${share.web.dir}" excludes="**/*-min.js" warn="true">
            <include name="**/*.js" />
        </yuicompress>
        
		<zip destfile="${share.package.file.zip}" update="true">
			<zipfileset dir="${config.dir}" prefix="shared/classes/alfresco" includes="web-extension*" />
			<zipfileset dir="${share.web.dir}" prefix="webapps/share" excludes="webapps/share/META-INF/**" />
			<zipfileset file="${share.package.file.jar}" prefix="webapps/share/WEB-INF/lib" />
		</zip>
	</target>
	
	<target name="package-repository" description="Creates a zip called ${repository.package.file.zip} which can be unzipped on top of an exploded Share web app">
		<delete file="${repository.package.file.zip}" />
		<zip destfile="${repository.package.file.zip}" update="true">
			<zipfileset dir="${project.dir}/datadictionary" prefix="Data Dictionary" />
		</zip>
	</target>
	
	<target name="package-amp-explorer" depends="jar-extension-explorer" description="Packages the customizations as an Alfresco module in ${package.file.amp}">
		<!-- take care, never tested!!! -->
		<delete file="${alfresco.package.file.amp}" />
		<zip destfile="${alfresco.package.file.amp}">
			<zipfileset file="${project.dir}/lib/*" prefix="lib" excludes="yuicompressor-2.4.2.jar,yui-compressor-ant-task-0.5.jar,mybatis*"/>
			<zipfileset file="${alfresco.package.file.jar}" prefix="lib" />
			<!-- zipfileset dir="${alfresco.web.dir}" prefix="web" / -->
			<zipfileset dir= "${config.dir}/extension/" prefix="config/alfresco${module.dir}/${module.id}/" excludes="**/web-client-config-custom.xml, **/module, **/reporting-model-context.xml, *-context.xml" />
			<zipfileset dir= "${basedir}/licenses/" prefix="config/alfresco${module.dir}/${module.id}/licenses"  />
			<zipfileset file="${config.dir}${module.dir}/${module.id}/module.properties" />
			<zipfileset file="${config.dir}${module.dir}/${module.id}/file-mapping.properties" />
			<zipfileset file="${config.dir}${extension.dir}/*-context.xml" prefix="config/alfresco${module.dir}/${module.id}/context" />
			<zipfileset file="${config.dir}${module.dir}/${module.id}/module-context.xml" prefix="config/alfresco${module.dir}/${module.id}" />
			<zipfileset file="${config.dir}${extension.dir}/web-client-config-custom.xml" prefix="config/alfresco${module.dir}/${module.id}/ui" />
			<zipfileset dir= "${basedir}/web/explorer/" prefix="web/" />
		</zip>
	</target>

	<target name="install-amp-explorer" depends="package-amp-explorer" description="Uses the Alfresco MMT to install the AMP into ${alfresco.war.path}">
		<java dir="." fork="true" jar="${alfresco.mmt.dir}/alfresco-mmt.jar">
			<arg line="install ${alfresco.package.file.amp} ${alfresco.war.path} -force -verbose" />
		</java>
	</target>

	<target name="deploy-amp-explorer" depends="install-amp-explorer" description="Unzips the AMP'd WAR file into ${alfresco.web.dir}">
		<unzip src="${alfresco.war.path}" dest="${alfresco.web.dir.output}" />
	</target>
	
	<target name="deploy-jar-explorer" depends="jar-extension-explorer" description="Copies jar file into ${alfresco.web.dir}/WEB-INF/lib">
		<copy todir="${alfresco.web.dir}/WEB-INF/lib"  file="${alfresco.package.file.jar}" />
		<!-- copy todir="${alfresco.tomcat.shared.dir}/alfresco/extension/org/alfresco/reporting/action/evaluator">
			<fileset dir="${build.dir}/org/alfresco/reporting/action/evaluator"/>
		</copy -->
	</target>
	
	<target name="deploy-explorer" depends="package-jar-explorer, package-extension-explorer" description="Unzips the ${package.file.zip} into ${alfresco.web.dir}">
		<unzip src="${alfresco.package.file.zip}" dest="${alfresco.shared.dir.output}" />
	</target>
	
	<target name="deploy-share" depends="package-extension-share" description="Unzips the ${package.file.zip} into ${alfresco.web.dir}">
		<unzip src="${share.package.file.zip}" dest="${share.shared.dir.output}" />
	</target>
	
	<target name="zip-project" depends="setup" description="Zips the entire Eclipse project as-is into ${project.file.zip}">
		<delete file="${project.file.zip}" />
		<zip destfile="${project.file.zip}">
			<zipfileset dir="${project.dir}" excludes="build/** bin/**" prefix="client-extensions" />
		</zip>
	</target>

	<path id="classpath">
		<fileset dir="${alfresco.sdk.remote.path}" includes="**/*.jar" />
		<fileset dir="${alfresco.sdk.server.path}" includes="**/*.jar" />
		<fileset dir="${alfresco.web.dir}/WEB-INF/lib" includes="**/*.jar" />
		<fileset dir="${project.dir}/lib" includes="**/*.jar" />
	</path>

	<target name="compile" description="compiles src to the build/classes folder">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${source.dir}" destdir="${build.dir}" debug="true" debuglevel="lines,vars,source">
			<classpath refid="classpath" />
			<compilerarg value="-Xlint:unchecked"/>
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${source.dir}" excludes="**/*.java" />
		</copy>
	</target>

	
	<target name="package-jar-explorer" depends="setup, compile" description="Compile and package the java source into the ${bin.dir}">
		<delete file="${alfresco.package.file.jar}" />
		<jar destfile="${alfresco.package.file.jar}">
			<fileset dir="${build.dir}" includes="*/**.class" />
			<!-- fileset dir="${build.dir}" includes="org/**" / -->
			<!-- add faces-custom-config.xml to META-INF -->
		</jar>
	</target>
	
	<target name="deploy-jar-share" depends="package-jar-share" description="Copy the ${alfresco.package.file.jar} into ${alfresco.web.dir}">
			<copy file="${share.package.file.jar}" todir="${share.shared.dir.output}/shared/lib" />
	</target>
	
	<!-- depends="minify-share" -->
	<target name="package-jar-share"  >
		<delete file="${share.package.file.jar}" />
		<delete dir="${build.dir}/share" />
		
		<mkdir dir="${build.dir}/share/META-INF" />
		<mkdir dir="${build.dir}/share/alfresco" />
		
		<copy todir="${build.dir}/share/META-INF" >
			<fileset dir="${share.web.dir}" />
		</copy>
		<copy file="${project.dir}/config/web-extension/share-config-custom.xml" todir="${build.dir}/share/META-INF" />
		
		<copy todir="${build.dir}/share/alfresco" >
			<fileset dir="${config.dir}" excludes="extension/**,**/share-config-custom.xml,org/**,module/**" />
		</copy>
		
		<copy todir="${build.dir}/share/" >
			<fileset dir="${config.dir}/web-extension" excludes="site-webscripts" includes="org/**" />
		</copy>
		
		<jar destfile="${share.package.file.jar}" >
			<fileset dir="${build.dir}/share" />
		</jar>
		<!-- <delete dir="${build.dir}/share" /> -->
		<delete>
		    <fileset dir="${share.web.dir}" includes="**/*-min.js"/>
		 </delete>
	</target>
	
	<target name="package-jar-share-theme" depends="setup" description="Compile and package the theme into the ${project.dir}-theme.jar">
		<delete file="${share.theme.file.jar}" />
		<jar destfile="${share.theme.file.jar}">
			<fileset dir="${project.dir}/share-themes" includes="*/**" />
		</jar>
	</target>

	
	<target name="deployrefresh-explorer" depends="deploy-explorer">
		<exec executable="wget">
			<arg value="--delete-after" />
			<arg value="--http-user=admin" />
			<arg value="--http-password=admin" />
			<arg value="--header=Accept-Charset: iso-8859-1,utf-8" />
			<arg value="--header=Accept-Language: en-us" />
			<arg value="--post-data" />
			<arg value="reset=on" />
			<arg value="http://localhost:8080/alfresco/service/index" />
		</exec>
	</target>
	
	<target name="deployrefresh-share" depends="deploy-share">
		<exec executable="wget">
			<arg value="--delete-after" />
			<arg value="--http-user=admin" />
			<arg value="--http-password=admin" />
			<arg value="--header=Accept-Charset: iso-8859-1,utf-8" />
			<arg value="--header=Accept-Language: en-us" />
			<arg value="--post-data" />
			<arg value="reset=on" />
			<arg value="http://localhost:8080/share/service/index" />
		</exec>
	</target>

   <target name="deploy-repository" >
	  <ftp server="localhost"
	       userid="admin"
	       password="admin"
	  	   remotedir="/Alfresco/Data Dictionary">
	    <fileset dir="${project.dir}/datadictionary"/>
	  </ftp>
	</target>

	<target name="package-all" depends="package-extension-explorer, package-extension-share, package-repository">
	</target>
	
	<target name="deploy-all" depends="deploy-explorer, deploy-share">
	</target>
	
	
	<target name="package-reports" depends="setup" description="Creates a zip called ${package.reporting.file.zip} which can be imported into CompanyHome">
		<delete file="${package.reporting.file.zip}" />
		<zip destfile="${package.reporting.file.zip}" update="true">
			<zipfileset dir="${reporting.dir}" prefix="AlfrescoBusinessReporting/" />
		</zip>
	</target>
	
	<target name="package-libs" depends="setup" description="Creates a zip called ${package.lib.file.zip} which can be imported into CompanyHome">
		<delete file="${package.lib.file.zip}" />
		<zip destfile="${package.lib.file.zip}" update="true">
			<zipfileset file="${package.file.jar}"  />
			<zipfileset dir="${project.dir}/lib" excludes="**/yuicompressor-2.4.2.jar,**/yui-compressor-ant-task-0.5.jar, **/commons-net-1.4.1.jar" />
		</zip>
	</target>

	<target name="package-images" depends="setup" description="Creates a zip called ${package.file.images} which can be imported into CompanyHome">
		<delete file="${package.file.images}" />
		<zip destfile="${package.file.images}">
			<zipfileset dir="${project.dir}/web/explorer/images" prefix="images"  />
		</zip>
	</target>
	
	<!-- http://www.rothburysoftware.com/blog/2012/03/30/automated-testing-with-alfresco -->
	<!-- the alfresco SDK JARs. -->
    <path id="classpath.alfresco.sdk">
        <fileset dir="${alfresco.sdk.server.path}">
            <include name="**/*.jar" />
            <exclude name="**/ant-1.7.1.jar" />
            <!-- 4.0.0 sdk seems to have duplicate files under server/bin. -->
            <exclude name="bin/*" />
        </fileset>
    </path>

    <!-- we test against the SDK, plus some other config and our source code, of course. -->
    <path id="test.classpath.path">
        <fileset dir="lib">
            <include name="*.jar" />
        </fileset>

        <!-- we want the classpath for config file to be alfresco/..., not config/alfresco, so we need a separate path element. -->
        <pathelement location="${alfresco.sdk.server.path}/config" />

        <!-- tests depend on our non-test code. -->
        <pathelement location="${project.dir}/classes" />
    </path>

<!-- The Alfresco app context has the same requirements for heap and PermGen size that it does when run in an app server. -->
	<!--
    <junit>
        <jvmarg value="-server" />
        <jvmarg value="-XX:MaxPermSize=256M" />
        <jvmarg value="-Dcom.sun.management.jmxremote" />

        <classpath>
            <pathelement location="${test-classes.dir}" />
            <path refid="classpath.alfresco.sdk" />
            <path refid="test.classpath.path" />
        </classpath>
        <formatter type="xml" />

        <batchtest fork="yes" todir="${test-reports.dir}">
            <fileset dir="${test.dir}">
                <include name="**/Test*.java" />
            </fileset>
        </batchtest>

    </junit>
    -->
</project>
